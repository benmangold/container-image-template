name: cron

on:
  # build when a new tag is created
  push:
    # tags:
    #   - 'v*.*.*'
  # rebuild tags on a cron
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 * * * *'

jobs:

  provide-tags:

    runs-on: ubuntu-latest

    steps:
      # checkout repo with all tags
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # set matrix output to all git tags listed in a JSON-parsable array    
      - id: set-matrix
        run: echo "::set-output name=matrix::$( jq -cRs 'split("\n")[:-1]' <<< $(git tag -l) )"

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  rebuild-tags:

    needs: provide-tags

    runs-on: ubuntu-latest

    env:
      DOCKER_HUB_ACCOUNT: bmngld

    # run a dynamic matrix of builds, rebuilding and republishing provided tags
    strategy:
      matrix:
        tag: ${{ fromJson(needs.provide-tags.outputs.matrix) }}

    steps:

      - uses: actions/checkout@v2
        with:
          ref: ${{ matrix.tag }}

      - run: make ci
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - id: set-repo-name
        run: echo "::set-output name=repo-name::$( basename `git rev-parse --show-toplevel` )"

      - id: set-docker-tag
        run: echo "::set-output name=docker-tag::${ $DOCKER_HUB_ACCOUNT/${{ steps.set-repo-name.outputs.reponame }}:${{ matrix.tag }} }"

      - run: docker tag test ${{ steps.set-docker-tag.outputs.docker-tag }}

      - run:  echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username $DOCKER_HUB_ACCOUNT --password-stdin

      - run: docker push  ${{ steps.set-docker-tag.outputs.docker-tag }}
